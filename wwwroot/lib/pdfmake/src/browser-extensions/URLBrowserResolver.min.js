/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/pdfmake@0.1.68/src/browser-extensions/URLBrowserResolver.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";"undefined"==typeof window||window.Promise||require("core-js/features/promise"),require("core-js/es/object/values");var fetchUrl=function(e){return new Promise(function(t,r){var o=new XMLHttpRequest;o.open("GET",e,!0),o.responseType="arraybuffer",o.onreadystatechange=function(){4===o.readyState&&(o.status>=200&&o.status<300||setTimeout(function(){r(new TypeError('Failed to fetch (url: "'+e+'")'))},0))},o.onload=function(){o.status>=200&&o.status<300&&t(o.response)},o.onerror=function(){setTimeout(function(){r(new TypeError('Network request failed (url: "'+e+'")'))},0)},o.ontimeout=function(){setTimeout(function(){r(new TypeError('Network request failed (url: "'+e+'")'))},0)},o.send()})};function URLBrowserResolver(e){this.fs=e,this.resolving={}}URLBrowserResolver.prototype.resolve=function(e){if(!this.resolving[e]){var t=this;this.resolving[e]=new Promise(function(r,o){0===e.toLowerCase().indexOf("https://")||0===e.toLowerCase().indexOf("http://")?fetchUrl(e).then(function(o){t.fs.writeFileSync(e,o),r()},function(e){o(e)}):r()})}return this.resolving[e]},URLBrowserResolver.prototype.resolved=function(){var e=this;return new Promise(function(t,r){Promise.all(Object.values(e.resolving)).then(function(){t()},function(e){r(e)})})},module.exports=URLBrowserResolver;
//# sourceMappingURL=/sm/d1a2e9ba34e2a4ef82e94b8e7f8ca50bf0755f61b8773e1d15aaf3b7899dcbf8.map